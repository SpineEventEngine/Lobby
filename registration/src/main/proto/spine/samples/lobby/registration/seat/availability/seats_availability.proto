//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.samples.lobby.registration.seat.availability;

option java_package="org.spine3.samples.lobby.registration.seat.availability";
option java_outer_classname = "SeatsAvailabilityProto";
option java_multiple_files = true;

import "spine/samples/lobby/registration/contracts/registration.proto";

// The availability of the conference seats.
message SeatsAvailability {
    // The id of the seats availability aggregate.
    SeatsAvailabilityId id = 1;

    // The collection of available seat quantity items.
    repeated spine.samples.lobby.registration.contracts.SeatQuantity available_seat = 2;

    // The map from a reservation ID value to temporarily reserved seat items.
    // NOTE: ReservationId cannot be used as a key due to Protobuf restrictions.
    map<string, SeatQuantities> pending_reservations = 3;
}

// The ID of the seats availability aggregate.
message SeatsAvailabilityId {
    // The UUID-based value of the ID.
    string uuid = 1;
}

// The set of seat items representing seat quantities of different types.
message SeatQuantities {
    repeated spine.samples.lobby.registration.contracts.SeatQuantity item = 1;
}
