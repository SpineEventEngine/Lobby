//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package lobby.registration;

option java_package="lobby.registration";
option java_multiple_files = true;

import "lobby/registration/conference.proto";

// Represents the availability of conference seats.
message SeatsAvailability {

    // The map from a seat type id to an available quantity of seats.
    map<string, int32> seats_available = 1;

    // The map from a reservation request id to seat quantities.
    map<string, SeatQuantities> pending_reservations = 2;
}

// The set of seat quantities of different types.
message SeatQuantities {
    repeated SeatQuantity quantities = 1;
}

// Represents the quantity of seats of the given type.
message SeatQuantity {

    // The seat type id.
    SeatTypeId seat_type_id = 1;

    // The quantity of seats of the given type.
    int32 quantity = 2;
}
