//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package lobby.registration;

option java_package="lobby.registration";
option java_outer_classname = "ConferenceProto";
option java_multiple_files = true;

import "lobby/contracts/common/common.proto";
import "lobby/contracts/registration/registration.proto";
import "spine/time/time.proto";
import "spine/money/money.proto";

// The conference created by a business customer.
message Conference {
    // The unique conference id.
    lobby.contracts.common.ConferenceId id = 1;

    // The conference locator access code.
    lobby.contracts.registration.ConferenceAccessCode access_code = 2;

    // The conference name. Used in the slug.
    string name = 3;

    // The conference description.
    string description = 4;

    // The location of the conference.
    string location = 5;

    // The tagline of the conference.
    string tagline = 6;

    // The search query for Twitter.
    string twitter_search = 7;

    // The start date of the conference.
    spine.time.LocalDate start_date = 8;

    // The types of seats available for the conference.
    repeated SeatType seat_type = 9;

    // The publishing status of the conference.
    PublishingStatus publishing_status = 10;

    // The publishing status of the conference.
    enum PublishingStatus {
        // The conference is not visible for users.
        NOT_PUBLISHED = 0;
        // The conference is visible for users.
        PUBLISHED = 1;
    }
}

// The type of a seat which represents the right to be admitted to a conference or
// to access a specific session at the conference (tutorial, workshop etc).
message SeatType {
    // The unique seat type id.
    lobby.contracts.registration.SeatTypeId id = 1;

    // The conference id the seat associated with.
    lobby.contracts.common.ConferenceId conference_id = 2;

    // The name of the seat type.
    string name = 3;

    // The description of the seat type.
    string description = 4;

    // The price of the seat of this type.
    spine.money.Money price = 5;

    // The total quantity of seats for the conference.
    int32 quantity_total = 6;

    // The available quantity of seats for the conference.
    int32 quantity_available = 7;
}
