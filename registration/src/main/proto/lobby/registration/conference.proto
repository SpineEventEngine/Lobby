//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package lobby.registration;

option java_package="lobby.registration";
option java_multiple_files = true;

import "spine/time/time.proto";

// The id of the conference based on the UUID.
message ConferenceId {
    // The UUID-based value of the conference ID.
    string uuid = 1;
}

// The conference created by a business customer.
message Conference {

    // The unique conference id.
    ConferenceId id = 1;

    // The conference locator access code.
    // Used by a business customer (conference owner) to view conference details.
    // Generated when the business customer creates the conference.
    string access_code = 2;

    // The conference name. Used in the slug.
    string name = 3;

    // The conference description.
    string description = 4;

    // The part of the URL used to access the conference.
    // Consists of conferenceId + conferenceName (name is cut).
    string slug = 5;

    // The start date of the conference.
    spine.time.LocalDate start_date = 6;

    // The end date of the conference (inclusive).
    spine.time.LocalDate end_date = 7;

    // The types of seats available for the conference.
    repeated SeatType seat_type = 8;
}

// The type of a seat which represents the right to be admitted to a conference or
// to access a specific session at the conference (tutorial, workshop etc).
message SeatType {

    // The unique seat type id.
    SeatTypeId id = 1;

    // The conference id the seat associated with.
    ConferenceId conference_id = 2;

    // The name of the seat type.
    string name = 3;

    // The description of the seat type.
    string description = 4;

    // The seat price (in USD).
    double price = 5;

    // The total quantity of seats for the conference.
    int32 quantity_total = 6;

    // The available quantity of seats for the conference.
    int32 quantity_available = 7;
}

// The id of the seat type based on the UUID.
message SeatTypeId {
    // The UUID-based value of the seat type ID.
    string uuid = 1;
}

// Associates an attendee with a seat in a confirmed order.
message SeatAssignment {

    // The seat type for the attendee.
    SeatTypeId seat_type_id = 1;

    // The personal info of the attendee.
    PersonalInfo attendee = 2;
}

message PersonalInfo {

    // The person's first name.
    string first_name = 1;

    // The person's last name.
    string last_name = 2;

    // The person's email.
    string email = 3;
}
