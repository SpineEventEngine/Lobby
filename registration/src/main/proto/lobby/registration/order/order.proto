//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package lobby.registration.order;

option java_package="lobby.registration.order";
option java_outer_classname = "OrderProto";
option java_multiple_files = true;

import "lobby/registration/conference.proto";
import "lobby/registration/seat/availability/seats_availability.proto";
import "spine/money/money.proto";

// The order made by a user (registrant) to reserve seats for a conference.
message Order {
    // The unique order id.
    OrderId id = 1;

    // The conference id the order associated with.
    ConferenceId conference_id = 2;

    // The set of seat items representing seat quantities of different types.
    repeated lobby.registration.seat.availability.SeatQuantity seat = 3;

    // The current status of the order.
    Status status = 4;

    // The status of the order.
    enum Status {
        // The initial status of the order.
        CREATED = 0;
        // The order is in this status when the system has temporarily reserved the seats requested by the registrant.
        RESERVED = 1;
        // The order is in this status when the registrant has successfully paid for order items.
        CONFIRMED = 2;
        // The order is in this status when the system cannot reserve the needed quantity of seats requested by the registrant.
        REJECTED = 3;
    }
}

// The id of the order based on the UUID.
message OrderId {
    // The UUID-based value of the order ID.
    string uuid = 1;
}

// The line of the order.
message SeatOrderLine {
    // The total price for the order line.
    spine.money.Money line_total = 1;

    // The price of the order unit (seat).
    spine.money.Money unit_price = 2;

    // The type of the order seats.
    lobby.registration.SeatType seat_type = 3;

    // The quantity of the order units (seats).
    int32 quantity = 4;
}
