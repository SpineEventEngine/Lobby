//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package lobby.contracts.common;

option java_package="lobby.contracts.common";
option java_outer_classname = "CommonContractsProto";
option java_multiple_files = true;

import "spine/money/money.proto";
import "spine/base/person.proto";
import "spine/base/email.proto";

// The ID of the order.
message OrderId {
    // The UUID-based value of the order ID.
    string uuid = 1;
}

// The ID of the conference.
message ConferenceId {
    // The UUID-based value of the conference ID.
    string uuid = 1;
}

// The ID of the reservation.
message ReservationId {
    // The UUID-based value of the reservation ID.
    string uuid = 1;
}

// The ID of the seat type.
message SeatTypeId {
    // The UUID-based value of the seat type ID.
    string uuid = 1;
}

// The type of a seat which represents the right to be admitted to a conference or
// to access a specific session at the conference (tutorial, workshop etc).
message SeatType {
    // The unique seat type id.
    SeatTypeId id = 1;

    // The conference id the seat associated with.
    ConferenceId conference_id = 2;

    // The name of the seat type.
    string name = 3;

    // The description of the seat type.
    string description = 4;

    // The price of the seat of this type.
    spine.money.Money price = 5;

    // The total quantity of seats for the conference.
    int32 quantity_total = 6;

    // The available quantity of seats for the conference.
    int32 quantity_available = 7;
}

// The info about a person.
message PersonalInfo {
    // The person's name.
    spine.base.PersonName name = 1;

    // The person's email.
    spine.base.EmailAddress email = 2;
}

// The part of the URL used to access the conference.
message ConferenceSlug {
    // The value of the slug.
    string value = 1;
}
